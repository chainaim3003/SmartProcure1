/* eslint-disable */
/**
 * This file was automatically generated by @algorandfoundation/algokit-client-generator.
 * DO NOT MODIFY IT BY HAND.
 * requires: @algorandfoundation/algokit-utils: ^7
 * 
 * TEMPORARY STUB: This file needs to be regenerated from the smart contract.
 * Run: algokit generate client --output src/contracts
 */
import { type AlgorandClient } from '@algorandfoundation/algokit-utils/types/algorand-client'

// Minimal stub to allow compilation
export const APP_SPEC: any = {
  name: "SimpleCollateralLending",
  desc: "Lending contract with risk-based terms",
  methods: []
}

export type ActiveLoan = {
  loanId: bigint
  borrower: string
  lender: string
  collateralAssetId: bigint
  principalAmount: bigint
  interestRateBps: bigint
  repaymentAmount: bigint
  dueDate: bigint
  fundedTime: bigint
  isRepaid: boolean
  isLiquidated: boolean
}

export type LoanRequest = {
  loanId: bigint
  borrower: string
  collateralAssetId: bigint
  collateralValue: bigint
  requestedAmount: bigint
  interestRateBps: bigint
  loanDurationDays: bigint
  requestTime: bigint
  isActive: boolean
  isFunded: boolean
}

export type LoanTerms = {
  maxLoanAmount: bigint
  interestRate: bigint
  ltvRatio: bigint
}

// Basic class implementation
export default class SimpleCollateralLendingClient {
  private algorandClient: AlgorandClient
  private appId: number

  constructor(algorandClient: AlgorandClient, appId: number) {
    this.algorandClient = algorandClient
    this.appId = appId
  }
}
